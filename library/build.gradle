apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
/* 2/4.适配kotlin */
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    //leancloud start
    compileOnly ('cn.leancloud:storage-android:6.0.5'){
        exclude group: 'com.alibaba', module: 'fastjson'
        exclude group: 'org.ligboy.retrofit2', module: 'converter-fastjson'
    }
    compileOnly 'io.reactivex.rxjava2:rxandroid:2.1.1'
    compileOnly 'com.alibaba:fastjson:1.1.71.android'
    compileOnly 'org.ligboy.retrofit2:converter-fastjson-android:2.1.0'
    //leancloud end

}

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/* 3/4.适配kotlin */

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
}
task generateJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
    group = 'jar'
    classifier = 'javadoc'
    from javadoc.destinationDir
}
task generateSourcesJar(type: Jar) {
    group = 'jar'
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    /* 4/4.适配kotlin */
//    archives javadocJar
//    archives sourcesJar
    archives generateJavadoc //javadocJar
    archives generateSourcesJar //sourcesJar
}

// 你只需要把这里的参数修改为自己的库名称即可
ext {
    userOrg = 'jixiaoyong' //bintray username
    siteUrl = 'www.android666.cf'
    gitUrl = 'https://github.com/jixiaoyong/DiyWidget.git'
    currentVersion = '0.0.5' //版本号
    groupId = 'com.github.jixiaoyong' //jcenter 上的路径
    artifactId = 'library' //项目名称
    desc = 'Android Diy Widget'
}


group = groupId
version = currentVersion

install {
    repositories.mavenInstaller {
        pom {
            project {
                name artifactId
                description desc
                url siteUrl

                packaging 'aar'
                groupId groupId
                artifactId artifactId
                version currentVersion

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'jixiaoyong'
                        name 'JiXiaoYong'
                        email 'jixiaoyong1995@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = artifactId
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
    }
}
repositories {
    mavenCentral()
}

/*README 上传到bintray：
1.打开gradle
2.运行publishing/bintrayUpload
*/
